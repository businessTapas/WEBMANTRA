// application/config/config.php

$config['base_url'] = 'http://localhost/codeigniter/'; // adjust for your project path

$config['encryption_key'] = 'replace-with-a-32-char-random-string';

// CSRF protection

$config['csrf_protection'] = TRUE;

$config['csrf_regenerate'] = TRUE;

$config['csrf_exclude_uris'] = array();

// Session

$config['sess_driver'] = 'files';

$config['sess_cookie_name'] = 'ci_session';

$config['sess_save_path'] = sys_get_temp_dir(); // or absolute path writable by PHP

$config['sess_match_ip'] = FALSE;

$config['sess_time_to_update'] = 300;

$config['sess_regenerate_destroy'] = TRUE;

// application/config/database.php

$db['default'] = array(

'dsn' => '',

'hostname' => 'localhost',

'username' => 'root',

'password' => '',

'database' => 'ci3_auth',

'dbdriver' => 'mysqli',

'dbprefix' => '',

'pconnect' => FALSE,

'db_debug' => (ENVIRONMENT !== 'production'),

'cache_on' => FALSE,

'char_set' => 'utf8mb4',

'dbcollat' => 'utf8mb4_unicode_ci',

'swap_pre' => '',

'encrypt' => FALSE,

'compress' => FALSE,

'stricton' => FALSE,

'failover' => array(),

'save_queries' => TRUE

);

//application/config/autoload.php

$autoload['packages'] = array();

$autoload['libraries'] = array('database','session','form_validation');

$autoload['helper'] = array('url','form');

$autoload['model'] = array();

//application/config/routes.php

$route['default_controller'] = 'auth'; // auth/index redirects to login

$route['404_override'] = '';

$route['translate_uri_dashes'] = FALSE;

$route['login'] = 'auth/login';

$route['register'] = 'auth/register';

$route['logout'] = 'auth/logout';

$route['dashboard'] = 'dashboard/index';

//application/core/MY_Controller.php

<?php defined('BASEPATH') OR exit('No direct script access allowed');

class MY_Controller extends CI_Controller

{

public function __construct()

{

parent::__construct();

}

protected function require_login()

{

if (!$this->session->userdata('is_logged_in')) {

$this->session->set_flashdata('error', 'Please login first.');

redirect('login');

}

}

}

//application/models/User_model.php

<?php defined('BASEPATH') OR exit('No direct script access allowed');

class User_model extends CI_Model

{

private $table = 'users';

public function create(array $data)

{

$insert = [

'name' => $data['name'],

'email' => strtolower(trim($data['email'])),

'username' => !empty($data['username']) ? trim($data['username']) : NULL,

'password_hash' => password_hash($data['password'], PASSWORD_DEFAULT),

'role' => isset($data['role']) ? $data['role'] : 'user',

'status' => 1,

];

$this->db->insert($this->table, $insert);

return $this->db->insert_id();

}

public function find_by_email($email)

{

return $this->db->get_where($this->table, ['email' => strtolower(trim($email))])->row();

}

public function find_by_username($username)

{

return $this->db->get_where($this->table, ['username' => trim($username)])->row();

}

public function get_all()

{

$this->db->select('id, name, email, username, role, status, created_at, updated_at');

$this->db->from($this->table);

$this->db->order_by('id','DESC');

return $this->db->get()->result();

}

}

//application/controllers/Auth.php
<?php defined('BASEPATH') OR exit('No direct script access allowed');

class Auth extends CI_Controller
{
    public function __construct()
    {
        parent::__construct();
        $this->load->model('User_model');
    }

    public function index()
    {
        return redirect('login');
    }

    public function login()
    {
        if ($this->session->userdata('is_logged_in')) {
            return redirect('dashboard');
        }

        if ($this->input->method() === 'post') {
            $this->form_validation->set_rules('identity', 'Email or Username', 'trim|required');
            $this->form_validation->set_rules('password', 'Password', 'required');

            if ($this->form_validation->run()) {
                $identity = $this->input->post('identity', TRUE);
                $password = $this->input->post('password', TRUE);

                // allow login by email or username
                $user = filter_var($identity, FILTER_VALIDATE_EMAIL)
                    ? $this->User_model->find_by_email($identity)
                    : $this->User_model->find_by_username($identity);

                if ($user && $user->status == 1 && password_verify($password, $user->password_hash)) {
                    $this->session->set_userdata([
                        'user_id'      => $user->id,
                        'user_name'    => $user->name,
                        'user_email'   => $user->email,
                        'user_role'    => $user->role,
                        'is_logged_in' => TRUE,
                    ]);
                    $this->session->set_flashdata('success', 'Welcome back, '.$user->name.'!');
                    return redirect('dashboard');
                }

                $this->session->set_flashdata('error', 'Invalid credentials or inactive account.');
                return redirect('login');
            }
        }

        $this->load->view('layout/header', ['title' => 'Login']);
        $this->load->view('auth/login');
        $this->load->view('layout/footer');
    }

    public function register()
    {
        if ($this->session->userdata('is_logged_in')) {
            return redirect('dashboard');
        }

        if ($this->input->method() === 'post') {
            $this->form_validation->set_rules('name', 'Name', 'trim|required|min_length[2]|max_length[100]');
            $this->form_validation->set_rules('email', 'Email', 'trim|required|valid_email|is_unique[users.email]');
            $this->form_validation->set_rules('username', 'Username', 'trim|alpha_numeric|min_length[3]|max_length[60]|is_unique[users.username]');
            $this->form_validation->set_rules('password', 'Password', 'required|min_length[6]');
            $this->form_validation->set_rules('confirm_password', 'Confirm Password', 'required|matches[password]');

            if ($this->form_validation->run()) {
                $data = [
                    'name'     => $this->input->post('name', TRUE),
                    'email'    => $this->input->post('email', TRUE),
                    'username' => $this->input->post('username', TRUE),
                    'password' => $this->input->post('password', TRUE),
                ];

                $this->User_model->create($data);
                $this->session->set_flashdata('success', 'Registration successful. Please log in.');
                return redirect('login');
            }
        }

        $this->load->view('layout/header', ['title' => 'Register']);
        $this->load->view('auth/register');
        $this->load->view('layout/footer');
    }

    public function logout()
    {
        $this->session->sess_destroy();
        redirect('login');
    }
}

//application/controllers/Dashboard.php

<?php defined('BASEPATH') OR exit('No direct script access allowed');

class Dashboard extends MY_Controller

{

public function __construct()

{

parent::__construct();

$this->require_login();

$this->load->model('User_model');

}

public function index()

{

$users = $this->User_model->get_all();

$data = [

'title' => 'Dashboard',

'users' => $users,

];

$this->load->view('layout/header', $data);

$this->load->view('dashboard/index', $data);

$this->load->view('layout/footer');

}

}

//views/auth/login.php

<!DOCTYPE html>

<html>

<head>

<title>Login</title>

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">

</head>

<body class="bg-light">

<div class="container mt-5">

<div class="row justify-content-center">

<div class="col-md-5">

<div class="card shadow p-4">

<h3 class="text-center">Login</h3>

<?php if($this->session->flashdata('error')): ?>

<div class="alert alert-danger"> <?= $this->session->flashdata('error'); ?> </div>

<?php endif; ?>

<form method="post" action="<?= base_url('auth/login'); ?>">

<div class="mb-3">

<label>Email</label>

<input type="email" name="email" class="form-control" required>

</div>

<div class="mb-3">

<label>Password</label>

<input type="password" name="password" class="form-control" required>

</div>

<button type="submit" class="btn btn-primary w-100">Login</button>

</form>

<p class="mt-3 text-center">Don't have an account? <a href="<?= base_url('auth/register'); ?>">Register</a></p>

</div>

</div>

</div>

</div>

</body>

</html>

// views/auth/register.php

<!DOCTYPE html>

<html>

<head>

<title>Register</title>

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">

</head>

<body class="bg-light">

<div class="container mt-5">

<div class="row justify-content-center">

<div class="col-md-6">

<div class="card shadow p-4">

<h3 class="text-center">Register</h3>

<?php if(validation_errors()): ?>

<div class="alert alert-danger"> <?= validation_errors(); ?> </div>

<?php endif; ?>

<form method="post" action="<?= base_url('auth/register'); ?>">

<div class="mb-3">

<label>Full Name</label>

<input type="text" name="name" class="form-control" required>

</div>

<div class="mb-3">

<label>Email</label>

<input type="email" name="email" class="form-control" required>

</div>

<div class="mb-3">

<label>Password</label>

<input type="password" name="password" class="form-control" required>

</div>

<div class="mb-3">

<label>Confirm Password</label>

<input type="password" name="cpassword" class="form-control" required>

</div>

<button type="submit" class="btn btn-success w-100">Register</button>

</form>

</html>

//views/dashboard.php

<!DOCTYPE html>

<html>

<head>

<title>Dashboard</title>

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">

</head>

<body>

<div class="container mt-4">

<div class="d-flex justify-content-between align-items-center">

<h2>Welcome, <?= $this->session->userdata('name'); ?>!</h2>

<a href="<?= base_url('auth/logout'); ?>" class="btn btn-danger">Logout</a>

</div>

<div class="card mt-4">

<div class="card-header">

<h4>All Registered Users</h4>

</div>

<div class="card-body">

<table class="table table-bordered">

<thead>

<tr>

<th>ID</th>

<th>Name</th>

<th>Email</th>

<th>Created At</th>

</tr>

</thead>

<tbody>

<?php foreach($users as $user): ?>

<tr>

<td><?= $user->id; ?></td>

<td><?= $user->name; ?></td>

<td><?= $user->email; ?></td>

<td><?= $user->created_at; ?></td>

</tr>

<?php endforeach; ?>

</html>
